SOURCE: ALGORITHMS PART1, COURSERA

Steps to developing a usable aalgorithm:
1. Model the problem: understand the problem clearly
2. Find an alorithm to solve it 
3. Check whether it is fast enough and fits in your memory limit
4. If not figure out the reasons why it is slow or consumes a lot of memory
5.Find a way to address the problem
6. Iterate it until you are satisfied


Union-Find: Dynamic connectivity
================================
Problem: given a set of N objects
*Union command: connects two objects
*Find/connected query: is there a path connecting the two objects?

See IMAGE DC1

so we need to develop an algorithm that can solve this for larger values of n.

SEE IMAGE DC2,3

the problem we are solving is to just find whether there is a connect between 2 given points, Yes or No. We are not going to find the actual path

Some applications of this algo:
*Pixels in a digital photo
*Computers in a network
*Freinds in a social network
*Transistors in a computer chip
*Elements in a mathematical set

Modelling the connections:
We assume that "is connected to" is an equivalence relation:
reflexive: p is connected to p
symmetric : if p is connected to q, then q is connected to p
Transitive: if p is connected to q and q is connected to r , then p is connected to r

connected components: is the maximal set of objects that are mutually connected

SEE IMAGE DC4

Implementing the operations:

Find query: check if two objects are in same component

Union command: of two components replaces them with a single component with their union as shown below

See IMAGE DC5



































